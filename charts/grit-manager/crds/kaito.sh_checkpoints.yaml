---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: checkpoints.kaito.sh
spec:
  group: kaito.sh
  names:
    categories:
    - girt
    kind: Checkpoint
    listKind: CheckpointList
    plural: checkpoints
    shortNames:
    - cp
    - cps
    singular: checkpoint
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The pod will be checkpointed
      jsonPath: .spec.podName
      name: Pod
      type: string
    - description: The phase of checkpoint action
      jsonPath: .status.phase
      name: Phase
      type: string
    - description: Checkpointed data is stored here
      jsonPath: .status.checkpointedDataPath
      name: Storage
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Checkpoint is the Schema for the Checkpoints API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            properties:
              autoMigration:
                description: |-
                  AutoMigration is used for migrating pod across nodes automatically. If true is set, related Restore resource will be created automatically, then checkpointed pod will be deleted by grit-manager, and a new pod will be created automatically by the pod owner(like Deployment and Job). this new pod will be selected as restoration pod and checkpointed data will be used for restoring new pod.
                  This field can be set to true for the following two cases:
                  1. owner reference of pod is Deployment or Job.
                  2. VolumeClaim field is specified as a cloud storage, this means checkpointed data can be shared across nodes.
                type: boolean
              podName:
                description: PodName is used to specify pod for checkpointing. only
                  pod in the same namespace of Checkpoint will be selected.
                type: string
              volumeClaim:
                description: |-
                  VolumeClaim is used to specify cloud storage for storing checkpoint data and share data across nodes.
                  End user should ensure related pvc/pv resource exist and ready before creating Checkpoint resource.
                properties:
                  claimName:
                    description: |-
                      claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                    type: string
                  readOnly:
                    description: |-
                      readOnly Will force the ReadOnly setting in VolumeMounts.
                      Default false.
                    type: boolean
                required:
                - claimName
                type: object
            required:
            - podName
            type: object
          status:
            properties:
              conditions:
                description: current state of pod checkpoint
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              dataPath:
                description: checkpointed data is stored under this path in the storage
                  volume. and the data in this path will be used for restoring pod.
                type: string
              nodeName:
                description: checkpointed pod is located on this node
                type: string
              phase:
                description: 'state machine of Checkpoint Phase: Pending --> Checkpointing
                  --> Checkpointed or Failed.'
                type: string
              podSpecHash:
                description: |-
                  PodSpecHash is used for recording hash value of pod spec.
                  Checkpointed data can be used to restore for pod with same hash value.
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
